<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:assertobjectequals="http://www.mulesoft.org/schema/mule/assertobjectequals"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/assertobjectequals http://www.mulesoft.org/schema/mule/assertobjectequals/current/mule-assertobjectequals.xsd">
	<munit:config name="implementation-test-suite.xml" />
	<munit:test name="implementation-test-suite-ValidateSuccessBookMovieTest" doc:id="bbd2749b-7505-4ddb-80db-ad0cafcc6c05" description="Test">
		<munit:behavior>
			<munit:set-event doc:name="Set Event" doc:id="197e1296-77cc-4de4-af0d-2a55c760f3d0" >
				<munit:payload value='  {
  "name": "MASTER",
  "emailId": "John@gmail.com",
  "movie": "MASTER1",
  "theater": "CinePolisBinniBang",
  "city": "Delhi",
  "noOfSeats": 5,
  "screen": "S1",
  "movieTime": "1pm"
}
  ' mediaType="application/json" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<munit-tools:sleep time="5000" doc:name="Sleep" doc:id="b307aa9f-4940-465b-8de9-e32c06dddfb2" />
			<flow-ref doc:name="Flow-ref to ValidateSuccessBookFlight" doc:id="4e868d26-c3a0-45c4-9ab4-508edcea6fc7" name="ValidateSuccessBookMovie"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="c4da3f28-2f62-4ee2-8fda-41d053b60885" expression="#[payload.ticketBookingId]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="implementation-test-suite-ValidateSuccessBookFlightTest1" doc:id="49d9f35a-1ca0-4e1e-89b5-44f2d46c7d86" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="861e718a-5f69-4046-bb84-f156a727fbf7" >
				<munit:payload value='  {
    "name": "MASTER",
  "emailId": "John@gmail.com",
  "movie": "MASTER1",
  "theater": "CinePolisBinniBang",
  "city": "Delhi",
  "noOfSeats": 5,
  "screen": "S1",
  "movieTime": "1pm"
}
  ' mediaType="application/json" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<munit-tools:sleep time="5000" doc:name="Sleep" doc:id="8061ed60-459f-4111-bc55-ad19732452eb" />
			<flow-ref doc:name="Flow-ref to ValidateSuccessBookMovie" doc:id="0161cb9b-e834-47c7-b7ee-b8c5bd69948c" name="ValidateSuccessBookMovie"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="a23e43ff-b96f-4254-9c77-e55b8381119b" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="implementation-test-suite-getMoviesByCityTest" doc:id="fa86eac1-64f5-4603-b12d-21808a8a8b81" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="625c19da-01b8-43f5-8d24-9de38018841b" >
				<munit:attributes value="#[{queryParams:{city:'Pune'}}]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<munit-tools:sleep time="5000" doc:name="Sleep" doc:id="7dcadf1d-f456-4643-8e62-788affadd705" />
			<flow-ref doc:name="Flow-ref to getMovies" doc:id="47dd8379-202f-4bfa-9c69-fc5a810a6d42" name="getMovies"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="785e6600-087c-4429-86be-f15d88b0b885" expression="#[sizeOf(payload)]" is="#[MunitTools::greaterThan(0)]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="implementation-test-suite-getMoviesByLanguageTest" doc:id="dba1cf5b-3cd0-4f9e-93bd-8ee4bad5df37" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="1dd71c20-56c8-42fa-9a62-982d6e60f1e6" >
				<munit:attributes value="#[{queryParams:{language:'Hindi'}}]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<munit-tools:sleep time="5000" doc:name="Sleep" doc:id="8d79b365-2985-41fa-8fcc-97f850cbf290" />
			<flow-ref doc:name="Flow-ref to getMovies" doc:id="8052c1ac-7bd5-4d23-8a36-3791da7c5056" name="getMovies"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="f3b36e8f-4dfe-49b2-888f-2c23c6a455c9" is="#[MunitTools::greaterThan(0)]" expression="#[sizeOf(payload)]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="implementation-test-suite-getMoviesByCityandLangauageTest" doc:id="20f27572-97d0-4b79-9381-03931f9254a7" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="fb7c3d19-d18c-45c8-b4d5-9b34abeb1677" >
				<munit:attributes value="#[{queryParams:{city:'Pune',language:'Hindi'}}]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<munit-tools:sleep time="5000" doc:name="Sleep" doc:id="750d692f-c60e-4922-a3f2-9d73f6686327" />
			<flow-ref doc:name="Flow-ref to getMovies" doc:id="faadbf8d-9c13-4914-9217-21ef29f8bf69" name="getMovies"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="9a425a38-850a-45cd-ab07-217428e65e72" expression="#[sizeOf(payload)]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="implementation-test-suite-getMovies-InvalidCityTest" doc:id="e9536ea6-6dbc-4260-a5c5-4ee367c5de26" description="Test" expectedErrorType="APP:INPUT_VALIDATION">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="71512985-8089-4b3b-85e3-b4c2e918c8cc" >
				<munit:attributes value="#[{queryParams:{city:'ABCD'}}]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getMovies" doc:id="ba77b4af-03b6-4549-a21d-a7413ab95b87" name="getMovies"/>
		</munit:execution>
		<munit:validation>
			<assertobjectequals:compare-objects doc:name="Compare objects" doc:id="3893577a-4e50-4a42-abbd-45764de5a192" expected="#[MunitTools::getResourceAsString('invalidCity.json')]" actual="#[payload]">
				<assertobjectequals:path-options />
			</assertobjectequals:compare-objects>
		</munit:validation>
	</munit:test>
	<munit:test name="implementation-test-suite-getMovies-InvalidLanguageTest" doc:id="939ed3be-0a51-4a3f-8bf9-5c77d46d3cd9" description="Test" expectedErrorType="APP:INPUT_VALIDATION">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="c1f8836b-ce06-4088-8278-1d6ff40add44" >
				<munit:attributes value="#[{queryParams:{language:'ABCD'}}]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getMovies" doc:id="db2e5e51-14a9-4118-90d2-98c9a919bc21" name="getMovies"/>
		</munit:execution>
		<munit:validation >
			<assertobjectequals:compare-objects doc:name="Compare objects" doc:id="ab294f73-2ad9-4c47-b7e4-f20035ba5cc1" expected="#[MunitTools::getResourceAsString('invalidLanguage.json')]" actual="#[payload]">
				<assertobjectequals:path-options />
			</assertobjectequals:compare-objects>
		</munit:validation>
	</munit:test>
	<munit:test name="implementation-test-suite-bookMovie-EmptyFieldTest" doc:id="3a82d5b3-f6cb-452b-8a06-01b0010cab91" description="Test" expectedErrorType="APP:INPUT_VALIDATION">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="f265bc77-2cd6-4102-ac6a-b1d3cfdf3531" >
				<munit:payload value='  {
  "name": "MAST",
  "emailId": "John@gmail.com",
  "movie": "",
  "theater": "CinePolisBinniBang",
  "city": "Delhi",
  "noOfSeats": 5,
  "screen": "S1",
  "movieTime": "1pm"
}
  ' mediaType="application/json" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookMovie" doc:id="28140071-138f-4ed4-bc8d-a9e03a54f9a3" name="bookMovie"/>
		</munit:execution>
		<munit:validation >
			<assertobjectequals:compare-objects doc:name="Compare objects" doc:id="eb3b6ec3-9c35-44ba-9519-b88ae7a0287e" actual="#[payload]" expected="#[MunitTools::getResourceAsString('invalidBookMovieRequest.json')]">
				<assertobjectequals:path-options />
			</assertobjectequals:compare-objects>
		</munit:validation>
	</munit:test>


</mule>
